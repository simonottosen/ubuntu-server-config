version: "3.3"
services:

  traefik:
    image: "traefik"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=simnik123@gmail.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=./config/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      #- "--certificatesresolvers.mytlschallenge.acme.storage=config/letsencrypt/acme.json" 
      - "./config/letsencrypt:/config/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: unless-stopped

  jupyter:
    restart: always
    image: jupyter/datascience-notebook
    container_name: "jupyter"
    volumes:
      - ./jupyter:/home/jovyan/work
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jupyter.rule=Host(`jupyter.simonottosen.dk`)"
      - "traefik.http.routers.jupyter.entrypoints=websecure"
      - "traefik.http.routers.jupyter.tls.certresolver=mytlschallenge"
      - "traefik.http.services.jupyter.loadbalancer.server.port=8888"

  hjem:
    image: tpanum/hjem
    container_name: "houseprice"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hjem.rule=Host(`houseprice.simonottosen.dk`)"
      - "traefik.http.routers.hjem.entrypoints=websecure"
      - "traefik.http.routers.hjem.tls.certresolver=mytlschallenge"
      - "traefik.http.services.hjem.loadbalancer.server.port=8080"

  postgres_db:
    image: postgres
    container_name: "postgres_db"
    environment: 
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./cph/db:/var/lib/postgresql/data
      - ./cph/db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    restart: unless-stopped

  cph_fetchtime:
    build: ./cph/Dockerfile
    volumes:
      - ./cph:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres_db
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      DB_PORT: 5432
    restart: unless-stopped


  webserver:
    image: "nginx:alpine"
    container_name: "webserver"
    volumes:
      - ./webserver:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`simonottosen.dk`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=mytlschallenge"
    restart: unless-stopped

  devops:
    image: "nginx:alpine"
    container_name: "devops"
    volumes:
      - ./devops:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.devops.rule=Host(`devops.simonottosen.dk`)"
      - "traefik.http.routers.devops.entrypoints=websecure"
      - "traefik.http.routers.devops.tls.certresolver=mytlschallenge"
    restart: unless-stopped

  webhook:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webhook
    restart: unless-stopped
    user: 1000:1000
    healthcheck:
      test: "curl -sS --fail 127.0.0.1:9000 || exit 1"
      interval: 120s
      timeout: 5s
      retries: 5
    volumes:
      - ./hooks/:/etc/webhook
      - ./scripts/:/scripts/
      - /var/run/docker.sock:/var/run/docker.sock
      - ./pipe:/hostpipe
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webhook.rule=Host(`webhook.simonottosen.dk`)"
      - "traefik.http.routers.webhook.entrypoints=websecure"
      - "traefik.http.routers.webhook.tls.certresolver=mytlschallenge"
      - "traefik.http.services.webhook.loadbalancer.server.port=9000"
      - traefik.http.routers.webhook.rule=PathPrefix(`/webhook`)
      - traefik.http.routers.webhook.middlewares=webhook-stripprefix
      - traefik.http.middlewares.webhook-stripprefix.stripprefix.prefixes=/webhook

  flood:
    image: jesec/flood
    user: 1000:1000
    restart: unless-stopped
    command: --port 3001 --allowedpath /data
    environment:
      HOME: /config
    volumes:
      - ./config/rtorrent:/config
      - ./downloads:/data
    ports:
      - 3001:3001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.torrent.rule=Host(`torrent.simonottosen.dk`)"
      - "traefik.http.routers.torrent.entrypoints=websecure"
      - "traefik.http.routers.torrent.tls.certresolver=mytlschallenge"
      - "traefik.http.services.torrent.loadbalancer.server.port=3001"
      
  rtorrent:
    image: jesec/rtorrent
    user: 1000:1000
    restart: unless-stopped
    command: -o network.port_range.set=6881-6881,system.daemon.set=true
    environment:
      HOME: /config
    volumes:
      - ./config/rtorrent:/config
      - ./downloads:/data
    ports:
      - 6881:6881

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ./downloads:/config
      - ./downloads:/downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
